rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Company-scoped read-only public documents for client UI
    match /dashboards/companies/{companyId}/summary {
      allow read: if request.auth != null && request.auth.token.company_id == companyId;
      allow write: if false; // only server can write
    }

    match /dashboards/crises/{companyId}/crisis_stats/{crisisId} {
      allow read: if request.auth != null && request.auth.token.company_id == companyId;
      allow write: if false;
    }

    match /dashboards/agents/{companyId}/summary {
      allow read: if request.auth != null && request.auth.token.company_id == companyId;
      allow write: if false;
    }

    // Allow reads on vector/vectors summary for authorized users
    match /dashboards/vectors/{companyId}/summary {
      allow read: if request.auth != null && request.auth.token.company_id == companyId;
      allow write: if false;
    }

    // System dashboards: only admin users allowed
    match /dashboards/system/{env} {
      allow read: if request.auth != null && request.auth.token.admin == true;
      allow write: if false;
    }

    // Allow reads on error/audit dashboard slices for company users
    match /dashboards/errors/{companyId}/recent {
      allow read: if request.auth != null && request.auth.token.company_id == companyId;
      allow write: if false;
    }

    match /dashboards/audit/{companyId}/summary {
      allow read: if request.auth != null && request.auth.token.company_id == companyId;
      allow write: if false;
    }

    // Default deny for other dashboard writes from clients
    match /dashboards/{document=**} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    // Agents and backend services use Admin SDK (no rules) but keep explicit paths for auditing
    match /agent_runs/{runId} {
      allow read: if request.auth != null && request.auth.token.admin == true;
      allow write: if false;
    }

    // For company documents only server writes
    match /companies/{companyId} {
      allow read: if request.auth != null && request.auth.token.company_id == companyId;
      allow write: if false;
    }

    // Company-scoped Crises are server-managed; client reads permitted if token company matches path
    match /Company/{companyId}/Crises/{crisisId} {
      allow read: if request.auth != null && request.auth.token.company_id == companyId;
      allow write: if false;
    }

    // Fallback: deny all writes from clients
    match /{document=**} {
      allow read: if request.auth != null;
      allow write: if false;
    }
  }
}
